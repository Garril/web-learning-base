/* 
  WebGL !== GPU !== 3D
  WebGL 是 OpenGL的子集，是OpenGL在web上的实现
  基础概念
    光栅（Raster）：指构成图像的像素阵列（像素 点阵），几乎所有线代图形系统都是基于光栅来绘制图形的。
    帧缓存（Frame Buffer）：绘图过程中，像素信息被存放于帧缓存中，它是一块内存地址。
    CPU：负责逻辑计算（Center Processing Unit中央处理单元）
    GPU：负责图形计算（Graphics Processing Unit图形处理单元）
  
  图形绘制过程理解：
    1、轮廓提取/meshing （CPU生成大概轮廓，再网格化---通常3角网格）
    2、光栅化（GPU把网格的图源对应进行光栅化）
    3、帧缓存（光栅化后，把点阵的数据送到帧缓存中）
    4、渲染（读取帧缓存，显示）
    大致如下：
      (Data) ---> Processor -----> Frame buffer ----> (Pixels)
  
  为什么要把处理单元分为 CPU 和 GPU？
    一般情况下，一个管道对应CPU的一个核，一般笔记本电脑8核、16核的，服务器更多
    管道更多，同时可以处理的任务也就更多。但是他的结构使得它不可能是成千上万个核
    它来处理图形渲染的任务的话，就好比把一粒粒的沙子去占一个大的管道，效率低。
    （CPU的一个核，还是要串行处理的）
    GPU就是大量的小运算单元构成的，每个运算单元彼此独立，所有运算可以并行处理。

*/