/* 
测试网：https://regex101.com/
  1、字符集合(get、got、goat)
    例子：
      get和got:
        g[eo]t
      get和goat:
        g(e|oa)t

    表示范围：
      [a-d] = [abcd]
      [a-dz] = [abcdz]、
    匹配-等特殊字符需要转义:
      [_\-]
    
    取反（排除）
      [^a-b] = 除去 a、b、c、d以外的字符都可以
      [^@\+] = 除去 @、+以外的字符都可以
  
  2、限定符（*、+、？）=》针对前一个字符
    *   出现0/n 次  =》 等效于 {0,}
    +   出现1/n 次  =》 等效于 {1,}
    ?   出现0/1 次  =》 等效于 {0,1}
  eg: go+d
    匹配: god、good、goood、....

    {}标注具体次数
    {3} 出现3次
    {3,} 出现3次或以上
    {3,6} 出现3至6次

  3、贪婪匹配 --- 匹配尽可能多的字符
    匹配: ...gd...gadxxgod ... goad.
      g[a-z]+d（贪婪）
      结果 gadxxgod
      g[a-z]+?d（非贪婪）
      结果 gad 和 god

  4、定位符（标记匹配位置）
    ^ 字符串开始
    $ 字符串结尾
    \b 单词边界，字符与空格间的位置
    \B 非单词边界
  eg：^1[0-9]{10}$ 获取1开头10位数字

  5、子表达式（内嵌的子正则）
  eg：
    g(e|0a)t 匹配拿 get和goat

    表达整体 =》 (got)+ 匹配 ...got...gotgot...gt 
    可以拿到 got和gotgot
  标记子匹配项
    ([a-z])\1([a-z]\2)
    匹配文本:  ....aaabbb....cczzz....abcd
    \1和\2表示匹配第一个第二个
    拿到aaabbb和cczzz
  
  注意（不常用）：
    子表达的结果会单独存储，如果不希望存储，可以添加标记?:
    eg：(ab)+c 匹配 ...ababc...abc....
    其中ab会单独存储起来
    而如果为 (?:ab)+c 去匹配，不存储
  
  6、缩写
    \d  ==== [0-9]
    \D  ==== [^0-9] 
    .   ==== [^\n\r] 
    \s  ==== [\f\n\r\t\v] 
    \S  ==== [^\f\n\r\t\v] 
    \w  ==== [A-Za-z0-9] 
    \W  ==== [^A-Za-z0-9]

  7、修饰符(指定匹配策略，可叠加使用)
  i 不区分大小写
  g 查找所有匹配项
  m 多行匹配
  s 默认下的圆点.是匹配除换行符\n之外的任何字符，
    加上s修饰符后,圆点.包含换行符\n
*/